vcl 4.1;
import std;
backend default {
	.host = "127.0.0.1";
	.port = "8080";
	.proxy_header = 2;
}
sub vcl_backend_response {
	if (bereq.url ~ "\.ssl$") {
		# make sure clients don't get stale data
		# also used for FreeBSD Update usage statistics
		set beresp.uncacheable = true;
	} else if (bereq.url ~ "/tp/") {
		# used for computing Portsnap usage statistics
		set beresp.uncacheable = true;
	} else {
		# everything else can be cached indefinitely
		set beresp.ttl = 1d;
	}
	if (std.integer(beresp.http.content-length, 0) > 1000000) {
		# big files are a problem
		set beresp.uncacheable = True;
	}
	if (std.integer(beresp.http.content-length, 0) > 1000) {
		# most responses go into on-disk storage
		set beresp.storage = storage.s0;
	} else {
		# tiny ones go into malloc
		set beresp.storage = storage.s1;
	}

	# don't stream responses; fetch entire objects before forwarding
	# them to the client
	set beresp.do_stream = false;

	return (deliver);
}
